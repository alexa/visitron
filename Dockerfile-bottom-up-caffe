# Matterport3DSimulator
# Requires nvidia gpu with driver 396.37 or higher


FROM nvidia/cudagl:9.2-devel-ubuntu18.04

ARG python=2.7
ENV PYTHON_VERSION=${python}
# Install cudnn
ENV CUDNN_VERSION 7.6.4.38
LABEL com.nvidia.cudnn.version="${CUDNN_VERSION}"
ENV NCCL_VERSION=2.4.8-1+cuda9.2

RUN apt-get update && apt-get install -y --no-install-recommends \
  libcudnn7=$CUDNN_VERSION-1+cuda9.2 \
  libcudnn7-dev=$CUDNN_VERSION-1+cuda9.2 \
  && \
  apt-mark hold libcudnn7 && \
  rm -rf /var/lib/apt/lists/*


# Install a few libraries to support both EGL and OSMESA options
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y wget doxygen curl libjsoncpp-dev libepoxy-dev libglm-dev libosmesa6 libosmesa6-dev libglew-dev libopencv-dev python-opencv python-setuptools python-dev python-pip
RUN apt-get install -y vim

RUN curl -O https://bootstrap.pypa.io/get-pip.py && \
  python${PYTHON_VERSION} get-pip.py && \
  rm get-pip.py

RUN ln -sf /usr/bin/python2.7 /usr/bin/python
ENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:/usr/lib/x86_64-linux-gnu

RUN apt-get install -y --allow-change-held-packages libnccl2=${NCCL_VERSION} libnccl-dev=${NCCL_VERSION}

RUN pip install opencv-python==4.1.0.25 torch==1.1.0 torchvision==0.3.0 numpy pandas==0.24.1 networkx==2.2

#install latest cmake
ADD https://cmake.org/files/v3.12/cmake-3.12.2-Linux-x86_64.sh /cmake-3.12.2-Linux-x86_64.sh
RUN mkdir /opt/cmake
RUN sh /cmake-3.12.2-Linux-x86_64.sh --prefix=/opt/cmake --skip-license
RUN ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake
RUN cmake --version

RUN apt-get update && apt-get install -y tmux expect cmake unzip git
RUN git clone https://github.com/peteanderson80/Matterport3DSimulator.git /opt/MatterSim
RUN cd /opt/MatterSim && git submodule update --init --recursive && mkdir build && cd build && cmake -DEGL_RENDERING=ON -DPYTHON_INCLUDE_DIR=/usr/include/python -DPYTHON_EXECUTABLE=/usr/bin/python ..
RUN cd /opt/MatterSim/build && make -j8

ENV PYTHONPATH=/opt/MatterSim/build

# Caffe Installation
RUN apt-get install -y --no-install-recommends apt-utils
RUN apt-get install -y build-essential git pkg-config
RUN apt-get install -y libprotobuf-dev libleveldb-dev libsnappy-dev libhdf5-serial-dev protobuf-compiler
RUN apt-get install -y libatlas-base-dev
RUN apt-get install -y --no-install-recommends libboost-all-dev
RUN apt-get install -y libgflags-dev libgoogle-glog-dev liblmdb-dev

RUN apt-get install -y cython
RUN pip install cython easydict sklearn
RUN pip install python-dateutil --force-reinstall --upgrade
RUN pip install scikit-image protobuf
RUN pip install pyyaml

RUN git clone https://github.com/peteanderson80/bottom-up-attention.git /opt/bottom-up-attention
RUN cd /opt/bottom-up-attention/lib && make

# WORKDIR /opt/bottom-up-attention/caffe
# RUN cp Makefile.config.example Makefile.config
# RUN sed -i 's/# USE_CUDNN := 1/USE_CUDNN := 1/' Makefile.config
# RUN sed -i 's/# USE_OPENCV := 0/USE_OPENCV := 0/' Makefile.config
# RUN sed -i 's/# OPENCV_VERSION := 3/OPENCV_VERSION := 3/' Makefile.config
# RUN sed -i 's/# WITH_PYTHON_LAYER := 1/WITH_PYTHON_LAYER := 1/' Makefile.config
# RUN sed -i 's/# USE_NCCL := 1/USE_NCCL := 1/' Makefile.config
# RUN sed -i 's+INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include+INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include /usr/include/hdf5/serial/+' Makefile.config
# RUN sed -i 's+CUDA_ARCH := -gencode arch=compute_20,code=sm_20 \\+CUDA_ARCH := \\ \n # -gencode arch=compute_20,code=sm_20 \\+' Makefile.config

# RUN sed -i 's/hdf5_hl/hdf5_serial_hl/' Makefile
# RUN sed -i 's/hdf5/hdf5_serial/' Makefile

# RUN make -j8
# RUN make pycaffe

# ENV CAFFE_ROOT=/opt/bottom-up-attention/caffe
# ENV PYCAFFE_ROOT $CAFFE_ROOT/python
# ENV PYCAFFE_LIB_ROOT $CAFFE_ROOT/lib
# ENV PYCAFFE_LIB_RPN_ROOT $CAFFE_ROOT/lib/rpn

# ENV PYTHONPATH $PYCAFFE_LIB_RPN_ROOT:$PYCAFFE_LIB_ROOT:$PYCAFFE_ROOT:$PYTHONPATH
# ENV PATH $CAFFE_ROOT/build/tools:$PYCAFFE_LIB_RPN_ROOT:$PYCAFFE_LIB_ROOT:$PYCAFFE_ROOT:$PATH

WORKDIR /root/mount/Matterport3DSimulator

# WORKDIR $CAFFE_ROOT
# COPY ./caffe .
# # RUN cp Makefile.config.example Makefile.config
# RUN for req in $(cat python/requirements.txt) pydot; do pip install $req; done

# RUN make clean && make  all -j "$(nproc)" && \
#   make pycaffe

# RUN make test -j "$(nproc)"

# ENV PYCAFFE_ROOT $CAFFE_ROOT/python
# ENV PYTHONPATH $PYCAFFE_ROOT:$PYTHONPATH
# ENV PATH $CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH
# RUN echo "$CAFFE_ROOT/build/lib" >> /etc/ld.so.conf.d/caffe.conf && ldconfig
